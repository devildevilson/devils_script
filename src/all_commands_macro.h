#ifndef DEVILS_ENGINE_SCRIPT_ALL_COMMANDS_MACRO_H
#define DEVILS_ENGINE_SCRIPT_ALL_COMMANDS_MACRO_H

#include "logic_commands_macro.h"
#include "numeric_commands_macro.h"

#define SCRIPT_COMMANDS_LIST \
  LOGIC_BLOCK_COMMANDS_LIST \
  NUMERIC_COMMANDS_LIST2 \
  COMMON_COMMAND_FUNC(invalid) \
  COMMON_COMMAND_FUNC(ignore) \
  COMMON_COMMAND_FUNC(root) \
  COMMON_COMMAND_FUNC(prev) \
  COMMON_COMMAND_FUNC(current) \
  COMMON_COMMAND_FUNC(index) \
  COMMON_COMMAND_FUNC(prev_index) \
  COMMON_COMMAND_FUNC(value) \
  COMMON_COMMAND_FUNC(selector) \
  COMMON_COMMAND_FUNC(sequence) \
  COMMON_COMMAND_FUNC(chance) \
  COMMON_COMMAND_FUNC(weighted_random) \
  COMMON_COMMAND_FUNC(random_value) \
  COMMON_COMMAND_FUNC(save_local) \
  COMMON_COMMAND_FUNC(has_local) \
  COMMON_COMMAND_FUNC(remove_local) \
  COMMON_COMMAND_FUNC(local) \
  COMMON_COMMAND_FUNC(save) \
  COMMON_COMMAND_FUNC(remove) \
  COMMON_COMMAND_FUNC(has_context) \
  COMMON_COMMAND_FUNC(context) \
  COMMON_COMMAND_FUNC(assert_condition) \
  COMMON_COMMAND_FUNC(equals_to) \
  COMMON_COMMAND_FUNC(not_equals_to) \
  COMMON_COMMAND_FUNC(equality) \
  COMMON_COMMAND_FUNC(type_equality) \
  COMMON_COMMAND_FUNC(compare) \
  COMMON_COMMAND_FUNC(transform) \
  COMMON_COMMAND_FUNC(filter) \
  COMMON_COMMAND_FUNC(reduce) \
  COMMON_COMMAND_FUNC(take) \
  COMMON_COMMAND_FUNC(drop) \
  COMMON_COMMAND_FUNC(list) \
  COMMON_COMMAND_FUNC(add_to_list) \
  COMMON_COMMAND_FUNC(is_in_list) \
  COMMON_COMMAND_FUNC(has_in_list) \
  COMMON_COMMAND_FUNC(random_in_list) \
  COMMON_COMMAND_FUNC(every_in_list) \
  COMMON_COMMAND_FUNC(list_view) \
  COMMON_COMMAND_FUNC(keep_set) \
  COMMON_COMMAND_FUNC(is_unique) \
  COMMON_COMMAND_FUNC(place_in_set) \
  COMMON_COMMAND_FUNC(place_in_set_if_unique) \
  COMMON_COMMAND_FUNC(execute) \

#define ONLY_INIT_LIST \
  COMMON_COMMAND_FUNC(number_container) \
  COMMON_COMMAND_FUNC(string_container) \
  COMMON_COMMAND_FUNC(object_container) \
  COMMON_COMMAND_FUNC(boolean_container) \
  COMMON_COMMAND_FUNC(compute_string) \
  COMMON_COMMAND_FUNC(compute_number) \
  COMMON_COMMAND_FUNC(change_scope_condition) \
  COMMON_COMMAND_FUNC(change_scope_effect) \

#define SCRIPT_IGNORE_KEY_VALUES \
  SCRIPT_IGNORE_KEY_FUNC(condition) \
  /*SCRIPT_IGNORE_KEY_FUNC(count)*/ \
  SCRIPT_IGNORE_KEY_FUNC(percent) \
  SCRIPT_IGNORE_KEY_FUNC(weight) \
  SCRIPT_IGNORE_KEY_FUNC(hint) \
  SCRIPT_IGNORE_KEY_FUNC(text) \
  SCRIPT_IGNORE_KEY_FUNC(op) \
  SCRIPT_IGNORE_KEY_FUNC(name) \
  SCRIPT_IGNORE_KEY_FUNC(ignore_value) \

#define COMPARE_OPERATORS_LIST \
  COMPARE_OPERATOR_FUNC(equal) \
  COMPARE_OPERATOR_FUNC(not_equal) \
  COMPARE_OPERATOR_FUNC(more) \
  COMPARE_OPERATOR_FUNC(less) \
  COMPARE_OPERATOR_FUNC(more_eq) \
  COMPARE_OPERATOR_FUNC(less_eq) \

#define COMPLEX_OBJECT_TOKENS_LIST \
  COMPLEX_OBJECT_TOKEN_FUNC(context) \

#define COMPLEX_VARIABLE_VALID_STRINGS_LIST \
  COMPLEX_VARIABLE_VALID_STRING_FUNC(root) \
  COMPLEX_VARIABLE_VALID_STRING_FUNC(prev) \
  COMPLEX_VARIABLE_VALID_STRING_FUNC(current) \

#endif
